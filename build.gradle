plugins {
    id 'java'
    id 'application'
}

group = 'com.jenkins.selenium'
version = '1.0.0'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    // Selenium WebDriver
    implementation 'org.seleniumhq.selenium:selenium-java:4.15.0'
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.15.0'
    implementation 'org.seleniumhq.selenium:selenium-firefox-driver:4.15.0'
    
    // TestNG for test frameworks
    testImplementation 'org.testng:testng:7.8.0'
    
    // CSV processing
    implementation 'com.opencsv:opencsv:5.8'
    
    // JSON processing for Jenkins API
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    
    // HTTP client for Jenkins API callss
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
}

test {
    useTestNG()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }
}

application {
    mainClass = 'com.jenkins.selenium.Main'
}

// Task to run tests with CSV data
task runTestsWithCSV(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.jenkins.selenium.TestRunner'
    args = ['src/test/resources/testdata.csv']
}

// Task to trigger Jenkins job
task triggerJenkinsJob(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.jenkins.selenium.JenkinsTrigger'
}

// Task to run Jenkins CLI
task jenkinsCLI(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.jenkins.selenium.JenkinsCLI'
    systemProperty 'jenkins.url', project.hasProperty('jenkins.url') ? project.property('jenkins.url') : 'http://localhost:8080'
    systemProperty 'jenkins.username', project.hasProperty('jenkins.username') ? project.property('jenkins.username') : 'ajaybenadict'
    systemProperty 'jenkins.token', project.hasProperty('jenkins.token') ? project.property('jenkins.token') : ''
}

// Task to run Jenkins test runner
task jenkinsTestRunner(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.jenkins.selenium.JenkinsTestRunner'
    systemProperty 'jenkins.url', project.hasProperty('jenkins.url') ? project.property('jenkins.url') : 'http://localhost:8080'
    systemProperty 'jenkins.username', project.hasProperty('jenkins.username') ? project.property('jenkins.username') : 'ajaybenadict'
    systemProperty 'jenkins.token', project.hasProperty('jenkins.token') ? project.property('jenkins.token') : '11d24e0e3935da12d9b937bb476f298073'
    systemProperty 'jenkins.job', project.hasProperty('jenkins.job') ? project.property('jenkins.job') : 'jenkins-dev-test'
    systemProperty 'browser', project.hasProperty('browser') ? project.property('browser') : 'chrome'
    systemProperty 'csv.file', project.hasProperty('csv.file') ? project.property('csv.file') : 'src/test/resources/testdata.csv'
    systemProperty 'wait', project.hasProperty('wait') ? project.property('wait') : 'true'
    systemProperty 'timeout', project.hasProperty('timeout') ? project.property('timeout') : '30'
}

// Task to run comprehensive Jenkins integration tests
task jenkinsIntegrationTest(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.jenkins.selenium.JenkinsTestRunner'
    args = [
        project.hasProperty('jenkins.url') ? project.property('jenkins.url') : 'http://localhost:8080',
        project.hasProperty('jenkins.username') ? project.property('jenkins.username') : 'admin',
        project.hasProperty('jenkins.token') ? project.property('jenkins.token') : '',
        project.hasProperty('jenkins.job') ? project.property('jenkins.job') : 'selenium-tests',
        project.hasProperty('browser') ? project.property('browser') : 'chrome',
        project.hasProperty('csv.file') ? project.property('csv.file') : 'src/test/resources/testdata.csv'
    ]
}